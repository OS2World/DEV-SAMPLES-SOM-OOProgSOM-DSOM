
/*
 * This file was generated by the SOM Compiler.
 * FileName: prg.xih.
 * Generated using:
 *     SOM Precompiler somipc: 2.2
 *     SOM Emitter emitxih: 2.7
 */

#ifndef SOM_Programmer_xih
#define SOM_Programmer_xih

#include <somcls.xh>
#include <somcm.xh>

#ifndef SOM_Programmer_xh
#include <prg.xh>
#endif

/*
 * Set the scope of methods functions
 */
#ifndef SOM_Scope
#define SOM_Scope static
#endif

#define Programmer_MaxNoMethods 1

/*
 * -- Instance Data
 */
typedef void ProgrammerData;

/*
 * -- Primary Implementation File Support
 */
#if (defined(Programmer_Class_Source) || defined(SOM_Module_prg_Source))

/*
 * Trace/Debug macro
 */
#ifndef ProgrammerMethodDebug
#define ProgrammerMethodDebug(c,m) SOMMethodDebug(c,m)
#endif

/*
 * -- Method Macros for use in Method Procedures
 */
#ifdef METHOD_MACROS
  #define _salary somSelf->salary
  #define _somFree somSelf->somFree
  #define _somDefaultInit somSelf->somDefaultInit
  #define _somDestruct somSelf->somDestruct
  #define _somInit somSelf->somInit
  #define _somUninit somSelf->somUninit
  #define _somGetClass somSelf->somGetClass
  #define _somGetClassName somSelf->somGetClassName
  #define _somGetSize somSelf->somGetSize
  #define _somIsA somSelf->somIsA
  #define _somIsInstanceOf somSelf->somIsInstanceOf
  #define _somRespondsTo somSelf->somRespondsTo
  #define _somComputeForwardVisitMask somSelf->somComputeForwardVisitMask
  #define _somComputeReverseVisitMask somSelf->somComputeReverseVisitMask
  #define _somDispatchV somSelf->somDispatchV
  #define _somDispatchL somSelf->somDispatchL
  #define _somDispatchA somSelf->somDispatchA
  #define _somDispatchD somSelf->somDispatchD
  #define _somDispatch somSelf->somDispatch
  #define _somClassDispatch somSelf->somClassDispatch
  #define _somCastObj somSelf->somCastObj
  #define _somResetObj somSelf->somResetObj
  #define _somPrintSelf somSelf->somPrintSelf
  #define _somDumpSelf somSelf->somDumpSelf
  #define _somDumpSelfInt somSelf->somDumpSelfInt
  #define _overtime somSelf->overtime
#endif


/*
 * -- The Programmer ClassData Structure
 */
struct ProgrammerClassDataStructure ProgrammerClassData = {(SOMClass *) NULL};

/*
 * -- The auxiliary Programmer ClassData structure
 */
struct ProgrammerCClassDataStructure ProgrammerCClassData = {(somMethodTabs) NULL};


/*
 * New Method: overtime
 */
SOM_Scope short  SOMLINK overtime(Programmer *somSelf, Environment *ev);
#ifndef somMN_overtime_defined
#define somMN_overtime_defined
static char *somMN_overtime = "overtime";
static somId somId_overtime = &somMN_overtime;
#endif  /* somMN_overtime_defined */
#ifndef somDS_overtime_defined
#define somDS_overtime_defined
static char *somDS_overtime = "::Programmer::overtime";
static somId somDI_overtime = &somDS_overtime;
#endif  /* somDS_overtime_defined */

static somMethodInfo overtimeMethodInfo = {12, 8, 0};

static somApRdInfo overtimeStubs = {0, 0, &overtimeMethodInfo};

/*
 * -- Routines and Structures to create the class object
 */

/*
 * Declare the Static Methods table.
 */
static somStaticMethod_t ProgrammerSM[] = {
    {    &ProgrammerClassData.overtime,
         &somId_overtime,
         &somDI_overtime,
         (somMethodProc *) overtime,
         (somMethodProc *)((void*)-1),
#ifdef overtime_somApRdDefault
         0},
#else
         (somMethodProc *) ((void*) &overtimeStubs) },
#endif
};


/*
 *  Initializers for class Ids
 */
static char * somCN_Programmer = "Programmer";
static char * somPCN_Programmer_Employee = "Employee";

static somId somPCProgrammer[] = {
    &somPCN_Programmer_Employee,
};

static somStaticClassInfo ProgrammerSCI = {
    3, 1, 0, 0, 0, 0,
    Programmer_MajorVersion, Programmer_MinorVersion,
    0, Programmer_MaxNoMethods, 1,
    &somCN_Programmer,
    (somId) NULL, 1,
    somPCProgrammer,
    (somClassDataStructure *) &ProgrammerClassData,
    (somCClassDataStructure *) &ProgrammerCClassData,
    ProgrammerSM, (somOverrideMethod_t *) NULL,
    (char *) NULL,
    (somNonInternalData_t *) NULL,  (somProcMethods_t *) NULL,
    (somVarargsFuncs_t *) NULL,
    (somTP_somClassInitFunc *) NULL,
    0, /* type code alignment */
    0, /* old style class, zero directinitclasses */
    0, /* no directinitclasses */
    0, /* number of general methods */
    0, /* no general methods */
    0, /* no public data offset */
    0, /* no sci development level check */
    0, /* number of SelectInheritedMethods */
    0, /* no SelectInheritedMethods */
    0, /* number of releaseorder entries */
    0, /* no ReleaseOrder */
    0, /* number of migrated methods */
    0, /* no migrated method implementations */
    0, /* number of initializers */
    0, /* no initializers */
    0, /* not a DTS class */
    0, /* no dynamically computed info */
};



/* ---------------------------------- */
/*
 * Class Creation and Initialization
 */

SOMClass * SOMLINK ProgrammerNewClass (integer4 somtmajorVersion,
		integer4 somtminorVersion)
{
    EmployeeNewClass(Employee_MajorVersion,Employee_MinorVersion);	/* static reference */
    return (SOMClass*) ((void*)(somBuildClass(1,&ProgrammerSCI, somtmajorVersion, somtminorVersion)));
}

/*
 * Functions for attributes.
 */

#endif /* Primary Implementation Support */

#endif       /* SOM_Programmer_xih */
