
/*
 * This file was generated by the SOM Compiler.
 * FileName: a.xih.
 * Generated using:
 *     SOM Precompiler somipc: 2.2
 *     SOM Emitter emitxih: 2.7
 */

/*
 *  You have to try this exercise yourself. Just uncomment
 *  the lines and run NMAKE
 * 
 */


#ifndef SOM_A_xih
#define SOM_A_xih

#include <somcls.xh>
#include <somcm.xh>

#ifndef SOM_A_xh
#include <a.xh>
#endif

/*
 * Set the scope of methods functions
 */
#ifndef SOM_Scope
#define SOM_Scope static
#endif

#define A_MaxNoMethods 5

/*
 * -- Instance Data
 */
typedef struct {
	short val1;
	short val2;
} AData;

/*
 * -- Getdata Macro
 */
#define AGetData(somSelf) \
    ((AData *) \
        SOM_DataResolve(((SOMObject *)((void *)somSelf)), ACClassData.instanceDataToken))

/*
 * -- Instance Data Access Macros for use in Method Procedures
 */
#ifdef VARIABLE_MACROS
  #define _val1 (somThis->val1)
  #define _val2 (somThis->val2)
#endif


/*
 * -- Primary Implementation File Support
 */
#if (defined(A_Class_Source) || defined(SOM_Module_a_Source))

/*
 * Trace/Debug macro
 */
#ifndef AMethodDebug
#define AMethodDebug(c,m) SOMMethodDebug(c,m)
#endif

/*
 * -- Method Macros for use in Method Procedures
 */
#ifdef METHOD_MACROS
  #define _somFree somSelf->somFree
  #define _somDefaultInit somSelf->somDefaultInit
  #define _somDestruct somSelf->somDestruct
  #define _somInit somSelf->somInit
  #define _somUninit somSelf->somUninit
  #define _somGetClass somSelf->somGetClass
  #define _somGetClassName somSelf->somGetClassName
  #define _somGetSize somSelf->somGetSize
  #define _somIsA somSelf->somIsA
  #define _somIsInstanceOf somSelf->somIsInstanceOf
  #define _somRespondsTo somSelf->somRespondsTo
  #define _somComputeForwardVisitMask somSelf->somComputeForwardVisitMask
  #define _somComputeReverseVisitMask somSelf->somComputeReverseVisitMask
  #define _somDispatchV somSelf->somDispatchV
  #define _somDispatchL somSelf->somDispatchL
  #define _somDispatchA somSelf->somDispatchA
  #define _somDispatchD somSelf->somDispatchD
  #define _somDispatch somSelf->somDispatch
  #define _somClassDispatch somSelf->somClassDispatch
  #define _somCastObj somSelf->somCastObj
  #define _somResetObj somSelf->somResetObj
  #define _somPrintSelf somSelf->somPrintSelf
  #define _somDumpSelf somSelf->somDumpSelf
  #define _somDumpSelfInt somSelf->somDumpSelfInt
  #define __get_val1 somSelf->_get_val1
  #define __set_val1 somSelf->_set_val1
  #define __get_val2 somSelf->_get_val2
  #define __set_val2 somSelf->_set_val2
  #define _display somSelf->display
#endif


/*
 * -- The A ClassData Structure
 */
struct AClassDataStructure AClassData = {(SOMClass *) NULL};

/*
 * -- The auxiliary A ClassData structure
 */
struct ACClassDataStructure ACClassData = {(somMethodTabs) NULL};


/*
 * New Method: _get_val1
 */
SOM_Scope short  SOMLINK _get_val1(A *somSelf, Environment *ev);
#ifndef somMN__get_val1_defined
#define somMN__get_val1_defined
static char *somMN__get_val1 = "_get_val1";
static somId somId__get_val1 = &somMN__get_val1;
#endif  /* somMN__get_val1_defined */
#ifndef somDS__get_val1_defined
#define somDS__get_val1_defined
static char *somDS__get_val1 = "::A::val1";
static somId somDI__get_val1 = &somDS__get_val1;
#endif  /* somDS__get_val1_defined */

static somMethodInfo _get_val1MethodInfo = {12, 8, 0};

static somApRdInfo _get_val1Stubs = {0, 0, &_get_val1MethodInfo};

/*
 * New Method: _set_val1
 */
SOM_Scope void  SOMLINK _set_val1(A *somSelf, Environment *ev,
		short val1);
#ifndef somMN__set_val1_defined
#define somMN__set_val1_defined
static char *somMN__set_val1 = "_set_val1";
static somId somId__set_val1 = &somMN__set_val1;
#endif  /* somMN__set_val1_defined */
#ifndef somDS__set_val1_defined
#define somDS__set_val1_defined
static char *somDS__set_val1 = "::A::val1";
static somId somDI__set_val1 = &somDS__set_val1;
#endif  /* somDS__set_val1_defined */
#define _set_val1_somApRdDefault

/*
 * New Method: _get_val2
 */
SOM_Scope short  SOMLINK _get_val2(A *somSelf, Environment *ev);
#ifndef somMN__get_val2_defined
#define somMN__get_val2_defined
static char *somMN__get_val2 = "_get_val2";
static somId somId__get_val2 = &somMN__get_val2;
#endif  /* somMN__get_val2_defined */
#ifndef somDS__get_val2_defined
#define somDS__get_val2_defined
static char *somDS__get_val2 = "::A::val2";
static somId somDI__get_val2 = &somDS__get_val2;
#endif  /* somDS__get_val2_defined */

static somMethodInfo _get_val2MethodInfo = {12, 8, 0};

static somApRdInfo _get_val2Stubs = {0, 0, &_get_val2MethodInfo};

/*
 * New Method: _set_val2
 */
SOM_Scope void  SOMLINK _set_val2(A *somSelf, Environment *ev,
		short val2);
#ifndef somMN__set_val2_defined
#define somMN__set_val2_defined
static char *somMN__set_val2 = "_set_val2";
static somId somId__set_val2 = &somMN__set_val2;
#endif  /* somMN__set_val2_defined */
#ifndef somDS__set_val2_defined
#define somDS__set_val2_defined
static char *somDS__set_val2 = "::A::val2";
static somId somDI__set_val2 = &somDS__set_val2;
#endif  /* somDS__set_val2_defined */
#define _set_val2_somApRdDefault

/*
 * New Method: display
 */
SOM_Scope void  SOMLINK display(A *somSelf, Environment *ev);
#ifndef somMN_display_defined
#define somMN_display_defined
static char *somMN_display = "display";
static somId somId_display = &somMN_display;
#endif  /* somMN_display_defined */
#ifndef somDS_display_defined
#define somDS_display_defined
static char *somDS_display = "::A::display";
static somId somDI_display = &somDS_display;
#endif  /* somDS_display_defined */
#define display_somApRdDefault

/*
 * -- Routines and Structures to create the class object
 */

/*
 * Declare the Static Methods table.
 */
static somStaticMethod_t ASM[] = {
    {    &AClassData._get_val1,
         &somId__get_val1,
         &somDI__get_val1,
         (somMethodProc *) _get_val1,
         (somMethodProc *)((void*)-1),
#ifdef _get_val1_somApRdDefault
         0},
#else
         (somMethodProc *) ((void*) &_get_val1Stubs) },
#endif
    {    &AClassData._set_val1,
         &somId__set_val1,
         &somDI__set_val1,
         (somMethodProc *) _set_val1,
         (somMethodProc *)((void*)-1),
#ifdef _set_val1_somApRdDefault
         0},
#else
         (somMethodProc *) ((void*) &_set_val1Stubs) },
#endif
    {    &AClassData._get_val2,
         &somId__get_val2,
         &somDI__get_val2,
         (somMethodProc *) _get_val2,
         (somMethodProc *)((void*)-1),
#ifdef _get_val2_somApRdDefault
         0},
#else
         (somMethodProc *) ((void*) &_get_val2Stubs) },
#endif
    {    &AClassData._set_val2,
         &somId__set_val2,
         &somDI__set_val2,
         (somMethodProc *) _set_val2,
         (somMethodProc *)((void*)-1),
#ifdef _set_val2_somApRdDefault
         0},
#else
         (somMethodProc *) ((void*) &_set_val2Stubs) },
#endif
    {    &AClassData.display,
         &somId_display,
         &somDI_display,
         (somMethodProc *) display,
         (somMethodProc *)((void*)-1),
#ifdef display_somApRdDefault
         0},
#else
         (somMethodProc *) ((void*) &displayStubs) },
#endif
};


/*
 *  Initializers for class Ids
 */
static char * somCN_A = "A";
static char * somPCN_A_SOMObject = "SOMObject";

static somId somPCA[] = {
    &somPCN_A_SOMObject,
};

static somStaticClassInfo ASCI = {
    3, 5, 0, 0, 0, 0,
    A_MajorVersion, A_MinorVersion,
    sizeof(AData), A_MaxNoMethods, 1,
    &somCN_A,
    (somId) NULL, 1,
    somPCA,
    (somClassDataStructure *) &AClassData,
    (somCClassDataStructure *) &ACClassData,
    ASM, (somOverrideMethod_t *) NULL,
    (char *) NULL,
    (somNonInternalData_t *) NULL,  (somProcMethods_t *) NULL,
    (somVarargsFuncs_t *) NULL,
    (somTP_somClassInitFunc *) NULL,
    2, /* type code alignment */
    0, /* old style class, zero directinitclasses */
    0, /* no directinitclasses */
    0, /* number of general methods */
    0, /* no general methods */
    0, /* no public data offset */
    0, /* no sci development level check */
    0, /* number of SelectInheritedMethods */
    0, /* no SelectInheritedMethods */
    0, /* number of releaseorder entries */
    0, /* no ReleaseOrder */
    0, /* number of migrated methods */
    0, /* no migrated method implementations */
    0, /* number of initializers */
    0, /* no initializers */
    0, /* not a DTS class */
    0, /* no dynamically computed info */
};



/* ---------------------------------- */
/*
 * Class Creation and Initialization
 */

SOMClass * SOMLINK ANewClass (integer4 somtmajorVersion,
		integer4 somtminorVersion)
{
    SOMObjectNewClass(SOMObject_MajorVersion,SOMObject_MinorVersion);	/* static reference */
    return (SOMClass*) ((void*)(somBuildClass(1,&ASCI, somtmajorVersion, somtminorVersion)));
}

/*
 * Functions for attributes.
 */
SOM_Scope short  SOMLINK _get_val1(A *somSelf, Environment *ev){
    AData *somThis = AGetData(somSelf);
    AMethodDebug("A","_get_val1");
    SOM_IgnoreWarning(ev);

    return (somThis->val1);
}
SOM_Scope void  SOMLINK _set_val1(A *somSelf, Environment *ev,
		short val1){
    AData *somThis = AGetData(somSelf);
    AMethodDebug("A","_set_val1");
    SOM_IgnoreWarning(ev);

    somThis->val1 = val1;
}
SOM_Scope short  SOMLINK _get_val2(A *somSelf, Environment *ev){
    AData *somThis = AGetData(somSelf);
    AMethodDebug("A","_get_val2");
    SOM_IgnoreWarning(ev);

    return (somThis->val2);
}
SOM_Scope void  SOMLINK _set_val2(A *somSelf, Environment *ev,
		short val2){
    AData *somThis = AGetData(somSelf);
    AMethodDebug("A","_set_val2");
    SOM_IgnoreWarning(ev);

    somThis->val2 = val2;
}

#endif /* Primary Implementation Support */

#endif       /* SOM_A_xih */
