
/*
 * This file was generated by the SOM Compiler.
 * FileName: dog.xih.
 * Generated using:
 *     SOM Precompiler somipc: 2.2
 *     SOM Emitter emitxih: 2.7
 */

#ifndef SOM_Dog_xih
#define SOM_Dog_xih

#include <somcls.xh>
#include <somcm.xh>

#ifndef SOM_Dog_xh
#include <dog.xh>
#endif

/*
 * Set the scope of methods functions
 */
#ifndef SOM_Scope
#define SOM_Scope static
#endif

#define Dog_MaxNoMethods 3

/*
 * -- Instance Data
 */
typedef struct {
	string name;
} DogData;

/*
 * -- Getdata Macro
 */
#define DogGetData(somSelf) \
    ((DogData *) \
        SOM_DataResolve(((SOMObject *)((void *)somSelf)), DogCClassData.instanceDataToken))

/*
 * -- Instance Data Access Macros for use in Method Procedures
 */
#ifdef VARIABLE_MACROS
  #define _name (somThis->name)
#endif


/*
 * -- Primary Implementation File Support
 */
#if (defined(Dog_Class_Source) || defined(SOM_Module_dog_Source))

/*
 * Trace/Debug macro
 */
#ifndef DogMethodDebug
#define DogMethodDebug(c,m) SOMMethodDebug(c,m)
#endif

/*
 * -- Method Macros for use in Method Procedures
 */
#ifdef METHOD_MACROS
  #define _somFree somSelf->somFree
  #define _somDefaultInit somSelf->somDefaultInit
  #define _somDestruct somSelf->somDestruct
  #define _somInit somSelf->somInit
  #define _somUninit somSelf->somUninit
  #define _somGetClass somSelf->somGetClass
  #define _somGetClassName somSelf->somGetClassName
  #define _somGetSize somSelf->somGetSize
  #define _somIsA somSelf->somIsA
  #define _somIsInstanceOf somSelf->somIsInstanceOf
  #define _somRespondsTo somSelf->somRespondsTo
  #define _somComputeForwardVisitMask somSelf->somComputeForwardVisitMask
  #define _somComputeReverseVisitMask somSelf->somComputeReverseVisitMask
  #define _somDispatchV somSelf->somDispatchV
  #define _somDispatchL somSelf->somDispatchL
  #define _somDispatchA somSelf->somDispatchA
  #define _somDispatchD somSelf->somDispatchD
  #define _somDispatch somSelf->somDispatch
  #define _somClassDispatch somSelf->somClassDispatch
  #define _somCastObj somSelf->somCastObj
  #define _somResetObj somSelf->somResetObj
  #define _somPrintSelf somSelf->somPrintSelf
  #define _somDumpSelf somSelf->somDumpSelf
  #define _somDumpSelfInt somSelf->somDumpSelfInt
  #define __get_name somSelf->_get_name
  #define __set_name somSelf->_set_name
  #define _display somSelf->display
#endif


/*
 * -- The Dog ClassData Structure
 */
struct DogClassDataStructure DogClassData = {(SOMClass *) NULL};

/*
 * -- The auxiliary Dog ClassData structure
 */
struct DogCClassDataStructure DogCClassData = {(somMethodTabs) NULL};


/*
 * New Method: _get_name
 */
SOM_Scope string  SOMLINK _get_name(Dog *somSelf, Environment *ev);
#ifndef somMN__get_name_defined
#define somMN__get_name_defined
static char *somMN__get_name = "_get_name";
static somId somId__get_name = &somMN__get_name;
#endif  /* somMN__get_name_defined */
#ifndef somDS__get_name_defined
#define somDS__get_name_defined
static char *somDS__get_name = "::Dog::name";
static somId somDI__get_name = &somDS__get_name;
#endif  /* somDS__get_name_defined */
#define _get_name_somApRdDefault

/*
 * New Method: _set_name
 */
SOM_Scope void  SOMLINK _set_name(Dog *somSelf, Environment *ev,
		string name);
#ifndef somMN__set_name_defined
#define somMN__set_name_defined
static char *somMN__set_name = "_set_name";
static somId somId__set_name = &somMN__set_name;
#endif  /* somMN__set_name_defined */
#ifndef somDS__set_name_defined
#define somDS__set_name_defined
static char *somDS__set_name = "::Dog::name";
static somId somDI__set_name = &somDS__set_name;
#endif  /* somDS__set_name_defined */
#define _set_name_somApRdDefault

/*
 * New Method: display
 */
SOM_Scope void  SOMLINK display(Dog *somSelf, Environment *ev);
#ifndef somMN_display_defined
#define somMN_display_defined
static char *somMN_display = "display";
static somId somId_display = &somMN_display;
#endif  /* somMN_display_defined */
#ifndef somDS_display_defined
#define somDS_display_defined
static char *somDS_display = "::Dog::display";
static somId somDI_display = &somDS_display;
#endif  /* somDS_display_defined */
#define display_somApRdDefault

/*
 * -- Routines and Structures to create the class object
 */

/*
 * Declare the Static Methods table.
 */
static somStaticMethod_t DogSM[] = {
    {    &DogClassData._get_name,
         &somId__get_name,
         &somDI__get_name,
         (somMethodProc *) _get_name,
         (somMethodProc *)((void*)-1),
#ifdef _get_name_somApRdDefault
         0},
#else
         (somMethodProc *) ((void*) &_get_nameStubs) },
#endif
    {    &DogClassData._set_name,
         &somId__set_name,
         &somDI__set_name,
         (somMethodProc *) _set_name,
         (somMethodProc *)((void*)-1),
#ifdef _set_name_somApRdDefault
         0},
#else
         (somMethodProc *) ((void*) &_set_nameStubs) },
#endif
    {    &DogClassData.display,
         &somId_display,
         &somDI_display,
         (somMethodProc *) display,
         (somMethodProc *)((void*)-1),
#ifdef display_somApRdDefault
         0},
#else
         (somMethodProc *) ((void*) &displayStubs) },
#endif
};


/*
 *  Initializers for class Ids
 */
static char * somCN_Dog = "Dog";
static char * somPCN_Dog_SOMObject = "SOMObject";

static somId somPCDog[] = {
    &somPCN_Dog_SOMObject,
};

static somStaticClassInfo DogSCI = {
    3, 3, 0, 0, 0, 0,
    Dog_MajorVersion, Dog_MinorVersion,
    sizeof(DogData), Dog_MaxNoMethods, 1,
    &somCN_Dog,
    (somId) NULL, 1,
    somPCDog,
    (somClassDataStructure *) &DogClassData,
    (somCClassDataStructure *) &DogCClassData,
    DogSM, (somOverrideMethod_t *) NULL,
    (char *) NULL,
    (somNonInternalData_t *) NULL,  (somProcMethods_t *) NULL,
    (somVarargsFuncs_t *) NULL,
    (somTP_somClassInitFunc *) NULL,
    4, /* type code alignment */
    0, /* old style class, zero directinitclasses */
    0, /* no directinitclasses */
    0, /* number of general methods */
    0, /* no general methods */
    0, /* no public data offset */
    0, /* no sci development level check */
    0, /* number of SelectInheritedMethods */
    0, /* no SelectInheritedMethods */
    0, /* number of releaseorder entries */
    0, /* no ReleaseOrder */
    0, /* number of migrated methods */
    0, /* no migrated method implementations */
    0, /* number of initializers */
    0, /* no initializers */
    0, /* not a DTS class */
    0, /* no dynamically computed info */
};



/* ---------------------------------- */
/*
 * Class Creation and Initialization
 */

SOMClass * SOMLINK DogNewClass (integer4 somtmajorVersion,
		integer4 somtminorVersion)
{
    SOMObjectNewClass(SOMObject_MajorVersion,SOMObject_MinorVersion);	/* static reference */
    return (SOMClass*) ((void*)(somBuildClass(1,&DogSCI, somtmajorVersion, somtminorVersion)));
}

/*
 * Functions for attributes.
 */
SOM_Scope string  SOMLINK _get_name(Dog *somSelf, Environment *ev){
    DogData *somThis = DogGetData(somSelf);
    DogMethodDebug("Dog","_get_name");
    SOM_IgnoreWarning(ev);

    return (somThis->name);
}
SOM_Scope void  SOMLINK _set_name(Dog *somSelf, Environment *ev,
		string name){
    DogData *somThis = DogGetData(somSelf);
    DogMethodDebug("Dog","_set_name");
    SOM_IgnoreWarning(ev);

    somThis->name = name;
}

#endif /* Primary Implementation Support */

#endif       /* SOM_Dog_xih */
