
/*
 * This file was generated by the SOM Compiler.
 * FileName: rightcar.xh.
 * Generated using:
 *     SOM Precompiler somipc: 2.2
 *     SOM Emitter emitxh: 2.7
 */

#ifndef SOM_RightSteeringCar_xh
#define SOM_RightSteeringCar_xh

class RightSteeringCar;

#define RightSteeringCar_MajorVersion 0
#define RightSteeringCar_MinorVersion 0

/* C++ som defs */
#include <somcls.xh>

/* Include C++ parent defs */
#ifndef SOM_Car_xh
#include <car.xh>
#endif

#ifndef RightSteeringCar_API
#define RightSteeringCar_API
/*
 * -- The Class API
 */

/*
 * Start of user-defined types:
 */

/*
 * End of user-defined types.
 */

/* A procedure to create the RightSteeringCar Class */
SOMEXTERN SOMClass * SOMLINK RightSteeringCarNewClass(
		integer4 majorVersion,
		integer4 minorVersion);

/* The API to the RightSteeringCar class object, and the methods it introduces. */
SOMEXTERN struct RightSteeringCarClassDataStructure {
	SOMClass *classObject;
} RightSteeringCarClassData;
#define _RightSteeringCar RightSteeringCarClassData.classObject

/* The API to parentMtabs for RightSteeringCar, and the instance data it introduces. */
SOMEXTERN struct RightSteeringCarCClassDataStructure {
	somMethodTabs parentMtab;
	somDToken instanceDataToken;
} RightSteeringCarCClassData;

/*
 * -- Typedefs for Procedures that support Methods introduced by RightSteeringCar
 */
SOMEXTERN {
}

#endif /* RightSteeringCar_API */


/*
 * -- Method Tokens are Thunks
 */
#undef somresolve_
#define somresolve_(obj,mToken) ((somMethodProc*)((void)obj, mToken))

/*
 * -- The C++ Wrapper Class for RightSteeringCar
 */
class RightSteeringCar : public Car
{
public:

void *operator new(size_t size)
{
   SOM_IgnoreWarning(size);
   if (!RightSteeringCarClassData.classObject) 
      RightSteeringCarNewClass(RightSteeringCar_MajorVersion,RightSteeringCar_MinorVersion);
   return (void *)
      ((somTD_SOMClass_somNew)
      somresolve_((SOMObject *)((void*)(RightSteeringCarClassData.classObject)),
                 SOMClassClassData.somNew))
         ((SOMClass *)((void*)(RightSteeringCarClassData.classObject)));
}

void operator delete(void * obj)
{
   if (obj) ((SOMObject *)obj)->somFree();
}


};   /* RightSteeringCar */



#endif       /* SOM_RightSteeringCar_xh */
