
/*
 * This file was generated by the SOM Compiler.
 * FileName: car.xih.
 * Generated using:
 *     SOM Precompiler somipc: 2.2
 *     SOM Emitter emitxih: 2.7
 */

#ifndef SOM_Car_xih
#define SOM_Car_xih

#include <somcls.xh>
#include <somcm.xh>

#ifndef SOM_Car_xh
#include <car.xh>
#endif

/*
 * Set the scope of methods functions
 */
#ifndef SOM_Scope
#define SOM_Scope static
#endif

#define Car_MaxNoMethods 7

/*
 * -- Instance Data
 */
typedef struct {
	string make;
	string model;
	long price;
} CarData;

/*
 * -- Getdata Macro
 */
#define CarGetData(somSelf) \
    ((CarData *) \
        SOM_DataResolve(((SOMObject *)((void *)somSelf)), CarCClassData.instanceDataToken))

/*
 * -- Instance Data Access Macros for use in Method Procedures
 */
#ifdef VARIABLE_MACROS
  #define _make (somThis->make)
  #define _model (somThis->model)
  #define _price (somThis->price)
#endif


/*
 * -- Primary Implementation File Support
 */
#if (defined(Car_Class_Source) || defined(SOM_Module_car_Source))

/*
 * Trace/Debug macro
 */
#ifndef CarMethodDebug
#define CarMethodDebug(c,m) SOMMethodDebug(c,m)
#endif
#ifndef MetaCar_Class_Source
#define MetaCar_Class_Source
#endif

/*
 * -- Method Macros for use in Method Procedures
 */
#ifdef METHOD_MACROS
  #define _somFree somSelf->somFree
  #define _somDefaultInit somSelf->somDefaultInit
  #define _somDestruct somSelf->somDestruct
  #define _somInit somSelf->somInit
  #define _somUninit somSelf->somUninit
  #define _somGetClass somSelf->somGetClass
  #define _somGetClassName somSelf->somGetClassName
  #define _somGetSize somSelf->somGetSize
  #define _somIsA somSelf->somIsA
  #define _somIsInstanceOf somSelf->somIsInstanceOf
  #define _somRespondsTo somSelf->somRespondsTo
  #define _somComputeForwardVisitMask somSelf->somComputeForwardVisitMask
  #define _somComputeReverseVisitMask somSelf->somComputeReverseVisitMask
  #define _somDispatchV somSelf->somDispatchV
  #define _somDispatchL somSelf->somDispatchL
  #define _somDispatchA somSelf->somDispatchA
  #define _somDispatchD somSelf->somDispatchD
  #define _somDispatch somSelf->somDispatch
  #define _somClassDispatch somSelf->somClassDispatch
  #define _somCastObj somSelf->somCastObj
  #define _somResetObj somSelf->somResetObj
  #define _somPrintSelf somSelf->somPrintSelf
  #define _somDumpSelf somSelf->somDumpSelf
  #define _somDumpSelfInt somSelf->somDumpSelfInt
  #define __get_make somSelf->_get_make
  #define __set_make somSelf->_set_make
  #define __get_model somSelf->_get_model
  #define __set_model somSelf->_set_model
  #define __get_price somSelf->_get_price
  #define __set_price somSelf->_set_price
  #define _printCarSpec somSelf->printCarSpec
#endif


/*
 * -- The Car ClassData Structure
 */
struct CarClassDataStructure CarClassData = {(MetaCar *) NULL};

/*
 * -- The auxiliary Car ClassData structure
 */
struct CarCClassDataStructure CarCClassData = {(somMethodTabs) NULL};


/*
 * New Method: _get_make
 */
SOM_Scope string  SOMLINK _get_make(Car *somSelf, Environment *ev);
#ifndef somMN__get_make_defined
#define somMN__get_make_defined
static char *somMN__get_make = "_get_make";
static somId somId__get_make = &somMN__get_make;
#endif  /* somMN__get_make_defined */
#ifndef somDS__get_make_defined
#define somDS__get_make_defined
static char *somDS__get_make = "::Car::make";
static somId somDI__get_make = &somDS__get_make;
#endif  /* somDS__get_make_defined */
#define _get_make_somApRdDefault

/*
 * New Method: _set_make
 */
SOM_Scope void  SOMLINK _set_make(Car *somSelf, Environment *ev,
		string make);
#ifndef somMN__set_make_defined
#define somMN__set_make_defined
static char *somMN__set_make = "_set_make";
static somId somId__set_make = &somMN__set_make;
#endif  /* somMN__set_make_defined */
#ifndef somDS__set_make_defined
#define somDS__set_make_defined
static char *somDS__set_make = "::Car::make";
static somId somDI__set_make = &somDS__set_make;
#endif  /* somDS__set_make_defined */
#define _set_make_somApRdDefault

/*
 * New Method: _get_model
 */
SOM_Scope string  SOMLINK _get_model(Car *somSelf, Environment *ev);
#ifndef somMN__get_model_defined
#define somMN__get_model_defined
static char *somMN__get_model = "_get_model";
static somId somId__get_model = &somMN__get_model;
#endif  /* somMN__get_model_defined */
#ifndef somDS__get_model_defined
#define somDS__get_model_defined
static char *somDS__get_model = "::Car::model";
static somId somDI__get_model = &somDS__get_model;
#endif  /* somDS__get_model_defined */
#define _get_model_somApRdDefault

/*
 * New Method: _set_model
 */
SOM_Scope void  SOMLINK _set_model(Car *somSelf, Environment *ev,
		string model);
#ifndef somMN__set_model_defined
#define somMN__set_model_defined
static char *somMN__set_model = "_set_model";
static somId somId__set_model = &somMN__set_model;
#endif  /* somMN__set_model_defined */
#ifndef somDS__set_model_defined
#define somDS__set_model_defined
static char *somDS__set_model = "::Car::model";
static somId somDI__set_model = &somDS__set_model;
#endif  /* somDS__set_model_defined */
#define _set_model_somApRdDefault

/*
 * New Method: _get_price
 */
SOM_Scope long  SOMLINK _get_price(Car *somSelf, Environment *ev);
#ifndef somMN__get_price_defined
#define somMN__get_price_defined
static char *somMN__get_price = "_get_price";
static somId somId__get_price = &somMN__get_price;
#endif  /* somMN__get_price_defined */
#ifndef somDS__get_price_defined
#define somDS__get_price_defined
static char *somDS__get_price = "::Car::price";
static somId somDI__get_price = &somDS__get_price;
#endif  /* somDS__get_price_defined */
#define _get_price_somApRdDefault

/*
 * New Method: _set_price
 */
SOM_Scope void  SOMLINK _set_price(Car *somSelf, Environment *ev,
		long price);
#ifndef somMN__set_price_defined
#define somMN__set_price_defined
static char *somMN__set_price = "_set_price";
static somId somId__set_price = &somMN__set_price;
#endif  /* somMN__set_price_defined */
#ifndef somDS__set_price_defined
#define somDS__set_price_defined
static char *somDS__set_price = "::Car::price";
static somId somDI__set_price = &somDS__set_price;
#endif  /* somDS__set_price_defined */
#define _set_price_somApRdDefault

/*
 * New Name Lookup Method: printCarSpec
 */
SOM_Scope void  SOMLINK printCarSpec(Car *somSelf, Environment *ev);
#ifndef somMN_printCarSpec_defined
#define somMN_printCarSpec_defined
#define somId_printCarSpec somLId_printCarSpec
#endif  /* somMN_printCarSpec_defined */
#ifndef somDS_printCarSpec_defined
#define somDS_printCarSpec_defined
static char *somDS_printCarSpec = "::Car::printCarSpec";
static somId somDI_printCarSpec = &somDS_printCarSpec;
#endif  /* somDS_printCarSpec_defined */
#define printCarSpec_somApRdDefault

/*
 * -- Routines and Structures to create the class object
 */

/*
 * Declare the Static Methods table.
 */
static somStaticMethod_t CarSM[] = {
    {    &CarClassData._get_make,
         &somId__get_make,
         &somDI__get_make,
         (somMethodProc *) _get_make,
         (somMethodProc *)((void*)-1),
#ifdef _get_make_somApRdDefault
         0},
#else
         (somMethodProc *) ((void*) &_get_makeStubs) },
#endif
    {    &CarClassData._set_make,
         &somId__set_make,
         &somDI__set_make,
         (somMethodProc *) _set_make,
         (somMethodProc *)((void*)-1),
#ifdef _set_make_somApRdDefault
         0},
#else
         (somMethodProc *) ((void*) &_set_makeStubs) },
#endif
    {    &CarClassData._get_model,
         &somId__get_model,
         &somDI__get_model,
         (somMethodProc *) _get_model,
         (somMethodProc *)((void*)-1),
#ifdef _get_model_somApRdDefault
         0},
#else
         (somMethodProc *) ((void*) &_get_modelStubs) },
#endif
    {    &CarClassData._set_model,
         &somId__set_model,
         &somDI__set_model,
         (somMethodProc *) _set_model,
         (somMethodProc *)((void*)-1),
#ifdef _set_model_somApRdDefault
         0},
#else
         (somMethodProc *) ((void*) &_set_modelStubs) },
#endif
    {    &CarClassData._get_price,
         &somId__get_price,
         &somDI__get_price,
         (somMethodProc *) _get_price,
         (somMethodProc *)((void*)-1),
#ifdef _get_price_somApRdDefault
         0},
#else
         (somMethodProc *) ((void*) &_get_priceStubs) },
#endif
    {    &CarClassData._set_price,
         &somId__set_price,
         &somDI__set_price,
         (somMethodProc *) _set_price,
         (somMethodProc *)((void*)-1),
#ifdef _set_price_somApRdDefault
         0},
#else
         (somMethodProc *) ((void*) &_set_priceStubs) },
#endif
    {    &CarClassData.printCarSpec,
         &somId_printCarSpec,
         &somDI_printCarSpec,
         (somMethodProc *) printCarSpec,
         (somMethodProc *)((void*)-1),
#ifdef printCarSpec_somApRdDefault
         0},
#else
         (somMethodProc *) ((void*) &printCarSpecStubs) },
#endif
};


/*
 *  Initializers for class Ids
 */
static char * somCN_Car = "Car";
static char * somEMC_Car = "MetaCar";
static char * somPCN_Car_SOMObject = "SOMObject";

static somId somPCCar[] = {
    &somPCN_Car_SOMObject,
};

static somStaticClassInfo CarSCI = {
    3, 7, 0, 0, 0, 0,
    Car_MajorVersion, Car_MinorVersion,
    sizeof(CarData), Car_MaxNoMethods, 1,
    &somCN_Car,
    &somEMC_Car, 0,
    somPCCar,
    (somClassDataStructure *) &CarClassData,
    (somCClassDataStructure *) &CarCClassData,
    CarSM, (somOverrideMethod_t *) NULL,
    (char *) NULL,
    (somNonInternalData_t *) NULL,  (somProcMethods_t *) NULL,
    (somVarargsFuncs_t *) NULL,
    (somTP_somClassInitFunc *) NULL,
    4, /* type code alignment */
    0, /* old style class, zero directinitclasses */
    0, /* no directinitclasses */
    0, /* number of general methods */
    0, /* no general methods */
    0, /* no public data offset */
    0, /* no sci development level check */
    0, /* number of SelectInheritedMethods */
    0, /* no SelectInheritedMethods */
    0, /* number of releaseorder entries */
    0, /* no ReleaseOrder */
    0, /* number of migrated methods */
    0, /* no migrated method implementations */
    0, /* number of initializers */
    0, /* no initializers */
    0, /* not a DTS class */
    0, /* no dynamically computed info */
};



/* ---------------------------------- */
/*
 * Class Creation and Initialization
 */

MetaCar * SOMLINK CarNewClass (integer4 somtmajorVersion,
		integer4 somtminorVersion)
{
    SOMObjectNewClass(SOMObject_MajorVersion,SOMObject_MinorVersion);	/* static reference */
    /* Explicit metaclass, so get it */ 
    MetaCarNewClass(MetaCar_MajorVersion,MetaCar_MinorVersion);	/* static reference */
    return (MetaCar*) ((void*)(somBuildClass(1,&CarSCI, somtmajorVersion, somtminorVersion)));
}

/*
 * Functions for attributes.
 */
SOM_Scope string  SOMLINK _get_make(Car *somSelf, Environment *ev){
    CarData *somThis = CarGetData(somSelf);
    CarMethodDebug("Car","_get_make");
    SOM_IgnoreWarning(ev);

    return (somThis->make);
}
SOM_Scope void  SOMLINK _set_make(Car *somSelf, Environment *ev,
		string make){
    CarData *somThis = CarGetData(somSelf);
    CarMethodDebug("Car","_set_make");
    SOM_IgnoreWarning(ev);

    somThis->make = make;
}
SOM_Scope string  SOMLINK _get_model(Car *somSelf, Environment *ev){
    CarData *somThis = CarGetData(somSelf);
    CarMethodDebug("Car","_get_model");
    SOM_IgnoreWarning(ev);

    return (somThis->model);
}
SOM_Scope void  SOMLINK _set_model(Car *somSelf, Environment *ev,
		string model){
    CarData *somThis = CarGetData(somSelf);
    CarMethodDebug("Car","_set_model");
    SOM_IgnoreWarning(ev);

    somThis->model = model;
}
SOM_Scope long  SOMLINK _get_price(Car *somSelf, Environment *ev){
    CarData *somThis = CarGetData(somSelf);
    CarMethodDebug("Car","_get_price");
    SOM_IgnoreWarning(ev);

    return (somThis->price);
}
SOM_Scope void  SOMLINK _set_price(Car *somSelf, Environment *ev,
		long price){
    CarData *somThis = CarGetData(somSelf);
    CarMethodDebug("Car","_set_price");
    SOM_IgnoreWarning(ev);

    somThis->price = price;
}

#endif /* Primary Implementation Support */

#endif       /* SOM_Car_xih */

#ifndef SOM_MetaCar_xih
#define SOM_MetaCar_xih

#include <somcls.xh>
#include <somcm.xh>

#ifndef SOM_MetaCar_xh
#include <car.xh>
#endif

/*
 * Set the scope of methods functions
 */
#ifndef SOM_Scope
#define SOM_Scope static
#endif

#define MetaCar_MaxNoMethods 1

/*
 * -- Instance Data
 */
typedef void MetaCarData;

/*
 * -- Primary Implementation File Support
 */
#if (defined(MetaCar_Class_Source) || defined(SOM_Module_car_Source))

/*
 * Trace/Debug macro
 */
#ifndef MetaCarMethodDebug
#define MetaCarMethodDebug(c,m) SOMMethodDebug(c,m)
#endif

/*
 * -- Method Macros for use in Method Procedures
 */
#ifdef METHOD_MACROS
  #define __get_somDirectInitClasses somSelf->_get_somDirectInitClasses
  #define __set_somDirectInitClasses somSelf->_set_somDirectInitClasses
  #define _somGetInstanceInitMask somSelf->somGetInstanceInitMask
  #define _somGetInstanceDestructionMask somSelf->somGetInstanceDestructionMask
  #define _somGetInitMaskOffset somSelf->somGetInitMaskOffset
  #define _somGetDestructionMaskOffset somSelf->somGetDestructionMaskOffset
  #define _somShouldCallInit somSelf->somShouldCallInit
  #define _somAllocate somSelf->somAllocate
  #define _somDeallocate somSelf->somDeallocate
  #define _somNew somSelf->somNew
  #define _somNewNoInit somSelf->somNewNoInit
  #define _somRenew somSelf->somRenew
  #define _somRenewNoInit somSelf->somRenewNoInit
  #define _somRenewNoZero somSelf->somRenewNoZero
  #define _somRenewNoInitNoZero somSelf->somRenewNoInitNoZero
  #define _somInitClass somSelf->somInitClass
  #define _somInitMIClass somSelf->somInitMIClass
  #define _somAddStaticMethod somSelf->somAddStaticMethod
  #define _somAddMethod somSelf->somAddMethod
  #define _somRegLPMToken somSelf->somRegLPMToken
  #define _somAddDynamicMethod somSelf->somAddDynamicMethod
  #define _somClassReady somSelf->somClassReady
  #define _somOverrideSMethod somSelf->somOverrideSMethod
  #define _somGetApplyStub somSelf->somGetApplyStub
  #define _somGetClassData somSelf->somGetClassData
  #define _somSetClassData somSelf->somSetClassData
  #define _somGetClassMtab somSelf->somGetClassMtab
  #define _somGetInstanceOffset somSelf->somGetInstanceOffset
  #define _somGetInstancePartSize somSelf->somGetInstancePartSize
  #define _somGetInstanceSize somSelf->somGetInstanceSize
  #define _somGetDataAlignment somSelf->somGetDataAlignment
  #define _somGetInstanceToken somSelf->somGetInstanceToken
  #define _somGetMemberToken somSelf->somGetMemberToken
  #define _somGetMethodData somSelf->somGetMethodData
  #define _somGetRdStub somSelf->somGetRdStub
  #define _somGetMethodDescriptor somSelf->somGetMethodDescriptor
  #define _somGetMethodIndex somSelf->somGetMethodIndex
  #define _somGetMethodOffset somSelf->somGetMethodOffset
  #define _somGetMethodToken somSelf->somGetMethodToken
  #define _somGetName somSelf->somGetName
  #define _somGetNthMethodData somSelf->somGetNthMethodData
  #define _somGetNthMethodInfo somSelf->somGetNthMethodInfo
  #define _somGetNumMethods somSelf->somGetNumMethods
  #define _somGetNumStaticMethods somSelf->somGetNumStaticMethods
  #define _somGetParent somSelf->somGetParent
  #define _somGetParents somSelf->somGetParents
  #define _somGetPClsMtab somSelf->somGetPClsMtab
  #define _somGetPClsMtabs somSelf->somGetPClsMtabs
  #define _somGetVersionNumbers somSelf->somGetVersionNumbers
  #define _somSetMethodDescriptor somSelf->somSetMethodDescriptor
  #define _somCheckVersion somSelf->somCheckVersion
  #define _somDescendedFrom somSelf->somDescendedFrom
  #define _somSupportsMethod somSelf->somSupportsMethod
  #define __get_somReleaseOrder somSelf->_get_somReleaseOrder
  #define __set_somReleaseOrder somSelf->_set_somReleaseOrder
  #define _somGetClassDataEntry somSelf->somGetClassDataEntry
  #define _somSetClassDataEntry somSelf->somSetClassDataEntry
  #define _somDefinedMethod somSelf->somDefinedMethod
  #define _somCastObjCls somSelf->somCastObjCls
  #define _somResetObjCls somSelf->somResetObjCls
  #define __get_trueClass somSelf->_get_trueClass
  #define __get_castedClass somSelf->_get_castedClass
  #define _somCloneClass somSelf->somCloneClass
  #define _somFindMethod somSelf->somFindMethod
  #define _somFindMethodOk somSelf->somFindMethodOk
  #define _somFindSMethod somSelf->somFindSMethod
  #define _somFindSMethodOk somSelf->somFindSMethodOk
  #define _somLookupMethod somSelf->somLookupMethod
  #define _somOverrideMtab somSelf->somOverrideMtab
  #define __get_somInstanceDataOffsets somSelf->_get_somInstanceDataOffsets
  #define __get_somMethodOffsets somSelf->_get_somMethodOffsets
  #define _somInit somSelf->somInit
  #define _somUninit somSelf->somUninit
  #define _somDumpSelfInt somSelf->somDumpSelfInt
  #define _somPrintSelf somSelf->somPrintSelf
  #define _somFree somSelf->somFree
  #define _somDefaultInit somSelf->somDefaultInit
  #define _somDestruct somSelf->somDestruct
  #define _somInit somSelf->somInit
  #define _somUninit somSelf->somUninit
  #define _somGetClass somSelf->somGetClass
  #define _somGetClassName somSelf->somGetClassName
  #define _somGetSize somSelf->somGetSize
  #define _somIsA somSelf->somIsA
  #define _somIsInstanceOf somSelf->somIsInstanceOf
  #define _somRespondsTo somSelf->somRespondsTo
  #define _somComputeForwardVisitMask somSelf->somComputeForwardVisitMask
  #define _somComputeReverseVisitMask somSelf->somComputeReverseVisitMask
  #define _somDispatchV somSelf->somDispatchV
  #define _somDispatchL somSelf->somDispatchL
  #define _somDispatchA somSelf->somDispatchA
  #define _somDispatchD somSelf->somDispatchD
  #define _somDispatch somSelf->somDispatch
  #define _somClassDispatch somSelf->somClassDispatch
  #define _somCastObj somSelf->somCastObj
  #define _somResetObj somSelf->somResetObj
  #define _somPrintSelf somSelf->somPrintSelf
  #define _somDumpSelf somSelf->somDumpSelf
  #define _somDumpSelfInt somSelf->somDumpSelfInt
  #define _createCar somSelf->createCar
#endif


/*
 * -- The MetaCar ClassData Structure
 */
struct MetaCarClassDataStructure MetaCarClassData = {(SOMClass *) NULL};

/*
 * -- The auxiliary MetaCar ClassData structure
 */
struct MetaCarCClassDataStructure MetaCarCClassData = {(somMethodTabs) NULL};


/*
 * New Method: createCar
 */
SOM_Scope Car*  SOMLINK createCar(MetaCar *somSelf, Environment *ev,
		string make,
		string model,
		long price);
#ifndef somMN_createCar_defined
#define somMN_createCar_defined
static char *somMN_createCar = "createCar";
static somId somId_createCar = &somMN_createCar;
#endif  /* somMN_createCar_defined */
#ifndef somDS_createCar_defined
#define somDS_createCar_defined
static char *somDS_createCar = "::MetaCar::createCar";
static somId somDI_createCar = &somDS_createCar;
#endif  /* somDS_createCar_defined */
#define createCar_somApRdDefault

/*
 * -- Routines and Structures to create the class object
 */

/*
 * Declare the Static Methods table.
 */
static somStaticMethod_t MetaCarSM[] = {
    {    &MetaCarClassData.createCar,
         &somId_createCar,
         &somDI_createCar,
         (somMethodProc *) createCar,
         (somMethodProc *)((void*)-1),
#ifdef createCar_somApRdDefault
         0},
#else
         (somMethodProc *) ((void*) &createCarStubs) },
#endif
};


/*
 *  Initializers for class Ids
 */
static char * somCN_MetaCar = "MetaCar";
static char * somPCN_MetaCar_SOMClass = "SOMClass";

static somId somPCMetaCar[] = {
    &somPCN_MetaCar_SOMClass,
};

static somStaticClassInfo MetaCarSCI = {
    3, 1, 0, 0, 0, 0,
    MetaCar_MajorVersion, MetaCar_MinorVersion,
    0, MetaCar_MaxNoMethods, 1,
    &somCN_MetaCar,
    (somId) NULL, 1,
    somPCMetaCar,
    (somClassDataStructure *) &MetaCarClassData,
    (somCClassDataStructure *) &MetaCarCClassData,
    MetaCarSM, (somOverrideMethod_t *) NULL,
    (char *) NULL,
    (somNonInternalData_t *) NULL,  (somProcMethods_t *) NULL,
    (somVarargsFuncs_t *) NULL,
    (somTP_somClassInitFunc *) NULL,
    0, /* type code alignment */
    0, /* old style class, zero directinitclasses */
    0, /* no directinitclasses */
    0, /* number of general methods */
    0, /* no general methods */
    0, /* no public data offset */
    0, /* no sci development level check */
    0, /* number of SelectInheritedMethods */
    0, /* no SelectInheritedMethods */
    0, /* number of releaseorder entries */
    0, /* no ReleaseOrder */
    0, /* number of migrated methods */
    0, /* no migrated method implementations */
    0, /* number of initializers */
    0, /* no initializers */
    0, /* not a DTS class */
    0, /* no dynamically computed info */
};



/* ---------------------------------- */
/*
 * Class Creation and Initialization
 */

SOMClass * SOMLINK MetaCarNewClass (integer4 somtmajorVersion,
		integer4 somtminorVersion)
{
    SOMClassNewClass(SOMClass_MajorVersion,SOMClass_MinorVersion);	/* static reference */
    return (SOMClass*) ((void*)(somBuildClass(1,&MetaCarSCI, somtmajorVersion, somtminorVersion)));
}

/*
 * Functions for attributes.
 */

#endif /* Primary Implementation Support */

#endif       /* SOM_MetaCar_xih */
