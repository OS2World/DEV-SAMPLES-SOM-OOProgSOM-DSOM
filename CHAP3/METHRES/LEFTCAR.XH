
/*
 * This file was generated by the SOM Compiler.
 * FileName: leftcar.xh.
 * Generated using:
 *     SOM Precompiler somipc: 2.2
 *     SOM Emitter emitxh: 2.7
 */

#ifndef SOM_LeftSteeringCar_xh
#define SOM_LeftSteeringCar_xh

class LeftSteeringCar;

#define LeftSteeringCar_MajorVersion 0
#define LeftSteeringCar_MinorVersion 0

/* C++ som defs */
#include <somcls.xh>

/* Include C++ parent defs */
#ifndef SOM_Car_xh
#include <car.xh>
#endif

#ifndef LeftSteeringCar_API
#define LeftSteeringCar_API
/*
 * -- The Class API
 */

/*
 * Start of user-defined types:
 */

/*
 * End of user-defined types.
 */

/* A procedure to create the LeftSteeringCar Class */
SOMEXTERN SOMClass * SOMLINK LeftSteeringCarNewClass(
		integer4 majorVersion,
		integer4 minorVersion);

/* The API to the LeftSteeringCar class object, and the methods it introduces. */
SOMEXTERN struct LeftSteeringCarClassDataStructure {
	SOMClass *classObject;
} LeftSteeringCarClassData;
#define _LeftSteeringCar LeftSteeringCarClassData.classObject

/* The API to parentMtabs for LeftSteeringCar, and the instance data it introduces. */
SOMEXTERN struct LeftSteeringCarCClassDataStructure {
	somMethodTabs parentMtab;
	somDToken instanceDataToken;
} LeftSteeringCarCClassData;

/*
 * -- Typedefs for Procedures that support Methods introduced by LeftSteeringCar
 */
SOMEXTERN {
}

#endif /* LeftSteeringCar_API */


/*
 * -- Method Tokens are Thunks
 */
#undef somresolve_
#define somresolve_(obj,mToken) ((somMethodProc*)((void)obj, mToken))

/*
 * -- The C++ Wrapper Class for LeftSteeringCar
 */
class LeftSteeringCar : public Car
{
public:

void *operator new(size_t size)
{
   SOM_IgnoreWarning(size);
   if (!LeftSteeringCarClassData.classObject) 
      LeftSteeringCarNewClass(LeftSteeringCar_MajorVersion,LeftSteeringCar_MinorVersion);
   return (void *)
      ((somTD_SOMClass_somNew)
      somresolve_((SOMObject *)((void*)(LeftSteeringCarClassData.classObject)),
                 SOMClassClassData.somNew))
         ((SOMClass *)((void*)(LeftSteeringCarClassData.classObject)));
}

void operator delete(void * obj)
{
   if (obj) ((SOMObject *)obj)->somFree();
}


};   /* LeftSteeringCar */



#endif       /* SOM_LeftSteeringCar_xh */
