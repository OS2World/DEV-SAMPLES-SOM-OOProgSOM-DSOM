
/*
 * This file was generated by the SOM Compiler.
 * FileName: company.xh.
 * Generated using:
 *     SOM Precompiler somipc: 2.2
 *     SOM Emitter emitxh: 2.7
 */

#ifndef SOM_Company_xh
#define SOM_Company_xh

class Company;

#define Company_MajorVersion 0
#define Company_MinorVersion 0

/* C++ som defs */
#include <somcls.xh>

/* Include C++ parent defs */
#ifndef SOM_SOMObject_xh
#include <somobj.xh>
#endif

#ifndef Company_API
#define Company_API
/*
 * -- The Class API
 */

/*
 * Start of user-defined types:
 */
class Employee;
class SOMClass;
#define Company_MAXNUM 10 /* 10 */
#ifndef _IDL_SEQUENCE_Employee_defined
#define _IDL_SEQUENCE_Employee_defined
typedef struct {
    unsigned long _maximum;
    unsigned long _length;
    Employee **_buffer;
} _IDL_SEQUENCE_Employee;
#endif /* _IDL_SEQUENCE_Employee_defined */ 

#ifndef SOM_DONT_USE_SHORT_NAMES
#ifndef SOMTGD_MAXNUM
    #ifdef MAXNUM
        #undef MAXNUM
        #define SOMTGD_MAXNUM 1
    #else
        #define MAXNUM Company_MAXNUM
    #endif /* MAXNUM */
#endif /* SOMTGD_MAXNUM */
#ifndef SOMTGD__IDL_SEQUENCE_Employee
    #ifdef _IDL_SEQUENCE_Employee
        #undef _IDL_SEQUENCE_Employee
        #define SOMTGD__IDL_SEQUENCE_Employee 1
    #else
        #define _IDL_SEQUENCE_Employee _IDL_SEQUENCE_Employee
    #endif /* _IDL_SEQUENCE_Employee */
#endif /* SOMTGD__IDL_SEQUENCE_Employee */
#endif /* SOM_DONT_USE_SHORT_NAMES */

/*
 * End of user-defined types.
 */

/* A procedure to create the Company Class */
SOMEXTERN SOMClass * SOMLINK CompanyNewClass(
		integer4 majorVersion,
		integer4 minorVersion);

/* The API to the Company class object, and the methods it introduces. */
SOMEXTERN struct CompanyClassDataStructure {
	SOMClass *classObject;
	somMToken _get_empList;
	somMToken _set_empList;
	somMToken addEmployee;
} CompanyClassData;
#define _Company CompanyClassData.classObject

/* The API to parentMtabs for Company, and the instance data it introduces. */
SOMEXTERN struct CompanyCClassDataStructure {
	somMethodTabs parentMtab;
	somDToken instanceDataToken;
} CompanyCClassData;

/*
 * -- Typedefs for Procedures that support Methods introduced by Company
 */
SOMEXTERN {
typedef _IDL_SEQUENCE_Employee   (* SOMLINK somTD_Company__get_empList)(Company *somSelf, Environment *ev);
typedef void   (* SOMLINK somTD_Company__set_empList)(Company *somSelf, Environment *ev,
		_IDL_SEQUENCE_Employee* empList);
typedef long   (* SOMLINK somTD_Company_addEmployee)(Company *somSelf, Environment *ev,
		Employee* entry);
}

#endif /* Company_API */


/*
 * -- Method Tokens are Thunks
 */
#undef somresolve_
#define somresolve_(obj,mToken) ((somMethodProc*)((void)obj, mToken))

/*
 * -- The C++ Wrapper Class for Company
 */
class Company : public SOMObject
{
public:

void *operator new(size_t size)
{
   SOM_IgnoreWarning(size);
   if (!CompanyClassData.classObject) 
      CompanyNewClass(Company_MajorVersion,Company_MinorVersion);
   return (void *)
      ((somTD_SOMClass_somNew)
      somresolve_((SOMObject *)((void*)(CompanyClassData.classObject)),
                 SOMClassClassData.somNew))
         ((SOMClass *)((void*)(CompanyClassData.classObject)));
}

void operator delete(void * obj)
{
   if (obj) ((SOMObject *)obj)->somFree();
}

/* public method: _get_empList */
_IDL_SEQUENCE_Employee   _get_empList(Environment *ev)
{
   return SOM_Resolve(this,Company,_get_empList)
	(this,ev);
}


/* public method: _set_empList */
void   _set_empList(Environment *ev,
		_IDL_SEQUENCE_Employee* empList)
{
   SOM_Resolve(this,Company,_set_empList)
	(this,ev,empList);
}


/* public method: addEmployee */
long   addEmployee(Environment *ev,
		Employee* entry)
{
   return SOM_Resolve(this,Company,addEmployee)
	(this,ev,entry);
}



};   /* Company */



#endif       /* SOM_Company_xh */
