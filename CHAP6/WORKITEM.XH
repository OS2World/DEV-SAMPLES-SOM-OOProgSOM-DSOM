
/*
 * This file was generated by the SOM Compiler.
 * FileName: workitem.xh.
 * Generated using:
 *     SOM Precompiler somipc: 2.2
 *     SOM Emitter emitxh: 2.7
 */

#ifndef SOM_WorkItem_xh
#define SOM_WorkItem_xh

class WorkItem;

#define WorkItem_MajorVersion 0
#define WorkItem_MinorVersion 0

/* C++ som defs */
#include <somcls.xh>

/* Include C++ parent defs */
#ifndef SOM_SOMPPersistentObject_xh
#include <po.xh>
#endif

#ifndef WorkItem_API
#define WorkItem_API
/*
 * -- The Class API
 */

/*
 * Start of user-defined types:
 */
class SOMPIOGroup;
class SOMPPersistentId;
class SOMPIdAssigner;
class SOMPEncoderDecoderAbstract;

/*
 * End of user-defined types.
 */

/* A procedure to create the WorkItem Class */
SOMEXTERN SOMClass * SOMLINK WorkItemNewClass(
		integer4 majorVersion,
		integer4 minorVersion);

/* The API to the WorkItem class object, and the methods it introduces. */
SOMEXTERN struct WorkItemClassDataStructure {
	SOMClass *classObject;
	somMToken _get_startTime;
	somMToken _set_startTime;
	somMToken _get_endTime;
	somMToken _set_endTime;
	somMToken _get_task;
	somMToken _set_task;
	somMToken mkEntry;
} WorkItemClassData;
#define _WorkItem WorkItemClassData.classObject

/* The API to parentMtabs for WorkItem, and the instance data it introduces. */
SOMEXTERN struct WorkItemCClassDataStructure {
	somMethodTabs parentMtab;
	somDToken instanceDataToken;
} WorkItemCClassData;

/*
 * -- Typedefs for Procedures that support Methods introduced by WorkItem
 */
SOMEXTERN {
typedef string   (* SOMLINK somTD_WorkItem__get_startTime)(WorkItem *somSelf, Environment *ev);
typedef void   (* SOMLINK somTD_WorkItem__set_startTime)(WorkItem *somSelf, Environment *ev,
		string startTime);
typedef string   (* SOMLINK somTD_WorkItem__get_endTime)(WorkItem *somSelf, Environment *ev);
typedef void   (* SOMLINK somTD_WorkItem__set_endTime)(WorkItem *somSelf, Environment *ev,
		string endTime);
typedef string   (* SOMLINK somTD_WorkItem__get_task)(WorkItem *somSelf, Environment *ev);
typedef void   (* SOMLINK somTD_WorkItem__set_task)(WorkItem *somSelf, Environment *ev,
		string task);
typedef void   (* SOMLINK somTD_WorkItem_mkEntry)(WorkItem *somSelf, Environment *ev,
		string sTime,
		string eTime,
		string taskDesc);
}

#endif /* WorkItem_API */


/*
 * -- Method Tokens are Thunks
 */
#undef somresolve_
#define somresolve_(obj,mToken) ((somMethodProc*)((void)obj, mToken))

/*
 * -- The C++ Wrapper Class for WorkItem
 */
class WorkItem : public SOMPPersistentObject
{
public:

void *operator new(size_t size)
{
   SOM_IgnoreWarning(size);
   if (!WorkItemClassData.classObject) 
      WorkItemNewClass(WorkItem_MajorVersion,WorkItem_MinorVersion);
   return (void *)
      ((somTD_SOMClass_somNew)
      somresolve_((SOMObject *)((void*)(WorkItemClassData.classObject)),
                 SOMClassClassData.somNew))
         ((SOMClass *)((void*)(WorkItemClassData.classObject)));
}

void operator delete(void * obj)
{
   if (obj) ((SOMObject *)obj)->somFree();
}

/* public method: _get_startTime */
string   _get_startTime(Environment *ev)
{
   return SOM_Resolve(this,WorkItem,_get_startTime)
	(this,ev);
}


/* public method: _set_startTime */
void   _set_startTime(Environment *ev,
		string startTime)
{
   SOM_Resolve(this,WorkItem,_set_startTime)
	(this,ev,startTime);
}


/* public method: _get_endTime */
string   _get_endTime(Environment *ev)
{
   return SOM_Resolve(this,WorkItem,_get_endTime)
	(this,ev);
}


/* public method: _set_endTime */
void   _set_endTime(Environment *ev,
		string endTime)
{
   SOM_Resolve(this,WorkItem,_set_endTime)
	(this,ev,endTime);
}


/* public method: _get_task */
string   _get_task(Environment *ev)
{
   return SOM_Resolve(this,WorkItem,_get_task)
	(this,ev);
}


/* public method: _set_task */
void   _set_task(Environment *ev,
		string task)
{
   SOM_Resolve(this,WorkItem,_set_task)
	(this,ev,task);
}


/* public method: mkEntry */
void   mkEntry(Environment *ev,
		string sTime,
		string eTime,
		string taskDesc)
{
   SOM_Resolve(this,WorkItem,mkEntry)
	(this,ev,sTime,eTime,taskDesc);
}



};   /* WorkItem */



#endif       /* SOM_WorkItem_xh */
