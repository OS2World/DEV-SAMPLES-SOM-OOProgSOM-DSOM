/*
 *  This file was generated by the SOM Compiler and Emitter Framework.
 *  Generated using: 
 *      SOM Emitter emitxtm: somc/smmain.c
 */

#define CalendarDir_Class_Source
#include <caldir.xih>
#include "day.xh"
#include <stdio.h>

SOM_Scope long  SOMLINK addDay(CalendarDir *somSelf,  Environment *ev, 
                               short daynum, Day* entry)
{
    CalendarDirData *somThis = CalendarDirGetData(somSelf);
    long            rc;
    CalendarDirMethodDebug("CalendarDir","addDay");

    if (sequenceLength(somThis->weekList) < sequenceMaximum(somThis->weekList))
    {
      sequenceElement(somThis->weekList, 
                      sequenceLength(somThis->weekList)) = entry;
      sequenceLength(somThis->weekList)++;

      somSelf->sompSetDirty(ev);
      entry->sompInitNearObject(ev, somSelf);

      rc = 0L;
    }
    else
      rc = -1L;

    return rc;
}

SOM_Scope Day*  SOMLINK getDay(CalendarDir *somSelf,  Environment *ev, 
                               short daynum)
{
    CalendarDirData *somThis = CalendarDirGetData(somSelf);
    CalendarDirMethodDebug("CalendarDir","getDay");

    return ( sequenceElement(somThis->weekList, daynum) );
}

SOM_Scope void  SOMLINK somInit(CalendarDir *somSelf)
{
    CalendarDirData *somThis = CalendarDirGetData(somSelf);
    CalendarDirMethodDebug("CalendarDir","somInit");

    CalendarDir_parent_SOMPPersistentObject_somInit(somSelf);

    sequenceMaximum(somThis->weekList) = MAXDAY;
    sequenceLength(somThis->weekList) = 0;
    somThis->weekList._buffer = 
        (Day**) SOMMalloc(sizeof (Day *) * MAXDAY);

}

SOM_Scope void  SOMLINK somUninit(CalendarDir *somSelf)
{
    CalendarDirData *somThis = CalendarDirGetData(somSelf);
    CalendarDirMethodDebug("CalendarDir","somUninit");

    if (somThis->weekList._buffer)
      SOMFree(somThis->weekList._buffer);

    CalendarDir_parent_SOMPPersistentObject_somUninit(somSelf);
}


SOM_Scope boolean  SOMLINK sompIsDirty(CalendarDir *somSelf, 
                                        Environment *ev)
{
    CalendarDirData *somThis = CalendarDirGetData(somSelf);
    CalendarDirMethodDebug("CalendarDir","sompIsDirty");

    return (somSelf->sompGetDirty(ev));
}

