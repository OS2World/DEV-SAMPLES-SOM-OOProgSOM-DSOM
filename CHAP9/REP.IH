
/*
 * This file was generated by the SOM Compiler.
 * FileName: rep.ih.
 * Generated using:
 *     SOM Precompiler somipc: 2.2
 *     SOM Emitter emitih: 2.7
 */

/*
 *  @(#) somc/gen_idl.efw 2.3 9/15/93 08:28:50 [10/5/93 13:12:18]
 * 
 * 96F8647, 96F8648 (C) Copyright IBM Corp. 1992, 1993
 * All Rights Reserved
 * Licensed Materials - Property of IBM
 * 
 *         File:    ReportEmitter.idl
 *       Author:    SOMObjects Emitter Framework
 *     Contents:    Generic framework logic class for ReportEmitter.
 *         Date:    Mon Jan  3 18:24:25 1994.
 */


/*
 * The SOM_STRICT_IDL macro means that we can ignore stars
 * in our declarations of objects.
 */
#define SOM_STRICT_IDL 1


#ifndef SOM_ReportEmitter_ih
#define SOM_ReportEmitter_ih

#pragma checkout(suspend)

#include <rep.h>

/*
 * Set the scope of methods functions
 */
#ifndef SOM_Scope
#define SOM_Scope static
#endif  /* SOM_Scope */

#ifndef SOM_CurrentClass
    #define SOM_CurrentClass ReportEmitterCClassData.parentMtab
#endif  /* SOM_CurrentClass */

#define ReportEmitter_MaxNoMethods 0

/*
 * Instance data
 */
typedef struct {
	short numOfAttributes;
	short numOfMethods;
} ReportEmitterData;

/*
 * Getdata macro
 */
#define ReportEmitterGetData(somSelf) \
    ((ReportEmitterData *) \
        SOM_DataResolve(somSelf, ReportEmitterCClassData.instanceDataToken))

/*
 * Instance variable access macros
 */
#define _numOfAttributes (somThis->numOfAttributes)
#define _numOfMethods (somThis->numOfMethods)

/*
 * Begin stuff that only goes in the primary file
 */
#if (defined(ReportEmitter_Class_Source) || defined(SOM_Module_rep_Source))

/*
 * Trace/Debug macro
 */
#ifndef ReportEmitterMethodDebug
   #define ReportEmitterMethodDebug(c,m) SOMMethodDebug(c,m)
#endif  /* ReportEmitterMethodDebug */

/*
 * Current class macros for Instance and Meta classes.
 */
#undef SOMMeta
#define SOMMeta M_ReportEmitterCClassData.parentMtab
#undef SOMInstance
#define SOMInstance ReportEmitterCClassData.parentMtab

#ifndef M_ReportEmitter_Class_Source
   #define M_ReportEmitter_Class_Source
#endif    /* M_ReportEmitter_Class_Source */

/*
 * Overridden method: somtGenerateSections
 */
#pragma linkage(somtGenerateSections, system)
SOM_Scope boolean  SOMLINK somtGenerateSections(ReportEmitter somSelf);
#ifndef somMN_somtGenerateSections_defined
#define somMN_somtGenerateSections_defined
   static char *somMN_somtGenerateSections = "somtGenerateSections";
   static somId somId_somtGenerateSections = &somMN_somtGenerateSections;
#endif  /* somMN_somtGenerateSections_defined */
#define ReportEmitter_parent_SOMTEmitC_somtGenerateSections(somSelf) \
	((SOM_ParentNumResolve(SOMTEmitC, 1, ReportEmitterCClassData.parentMtab, somtGenerateSections)) \
	 (somSelf))
#ifndef SOMGD_pmc_SOMTEmitC_somtGenerateSections
  #ifdef parent_SOMTEmitC_somtGenerateSections
     #undef parent_SOMTEmitC_somtGenerateSections
     #define SOMGD_pmc_SOMTEmitC_somtGenerateSections 1
  #else
     #define parent_SOMTEmitC_somtGenerateSections ReportEmitter_parent_SOMTEmitC_somtGenerateSections
  #endif /* parent_SOMTEmitC_somtGenerateSections */
#endif /* SOMGD_pmc_SOMTEmitC_somtGenerateSections */
#ifndef parent_somtGenerateSections
   #define parent_somtGenerateSections(somSelf) \
	((SOM_ParentNumResolve(SOMTEmitC, 1, SOM_CurrentClass, somtGenerateSections)) \
	 (somSelf))
#endif  /* parent_somtGenerateSections */
#define ReportEmitter_parents_somtGenerateSections(arg0) \
  (void) ReportEmitter_parent_SOMTEmitC_somtGenerateSections(arg0);

/*
 * Overridden method: somtEmitMethod
 */
#pragma linkage(somtEmitMethod, system)
SOM_Scope void  SOMLINK somtEmitMethod(ReportEmitter somSelf,
		SOMTMethodEntryC entry);
#ifndef somMN_somtEmitMethod_defined
#define somMN_somtEmitMethod_defined
   static char *somMN_somtEmitMethod = "somtEmitMethod";
   static somId somId_somtEmitMethod = &somMN_somtEmitMethod;
#endif  /* somMN_somtEmitMethod_defined */
#define ReportEmitter_parent_SOMTEmitC_somtEmitMethod(somSelf,entry) \
	((SOM_ParentNumResolve(SOMTEmitC, 1, ReportEmitterCClassData.parentMtab, somtEmitMethod)) \
	 (somSelf,entry))
#ifndef SOMGD_pmc_SOMTEmitC_somtEmitMethod
  #ifdef parent_SOMTEmitC_somtEmitMethod
     #undef parent_SOMTEmitC_somtEmitMethod
     #define SOMGD_pmc_SOMTEmitC_somtEmitMethod 1
  #else
     #define parent_SOMTEmitC_somtEmitMethod ReportEmitter_parent_SOMTEmitC_somtEmitMethod
  #endif /* parent_SOMTEmitC_somtEmitMethod */
#endif /* SOMGD_pmc_SOMTEmitC_somtEmitMethod */
#ifndef parent_somtEmitMethod
   #define parent_somtEmitMethod(somSelf,entry) \
	((SOM_ParentNumResolve(SOMTEmitC, 1, SOM_CurrentClass, somtEmitMethod)) \
	 (somSelf,entry))
#endif  /* parent_somtEmitMethod */
#define ReportEmitter_parents_somtEmitMethod(arg0,arg1) \
  (void) ReportEmitter_parent_SOMTEmitC_somtEmitMethod(arg0,arg1);

/*
 * Overridden method: somtEmitAttribute
 */
#pragma linkage(somtEmitAttribute, system)
SOM_Scope void  SOMLINK somtEmitAttribute(ReportEmitter somSelf,
		SOMTAttributeEntryC att);
#ifndef somMN_somtEmitAttribute_defined
#define somMN_somtEmitAttribute_defined
   static char *somMN_somtEmitAttribute = "somtEmitAttribute";
   static somId somId_somtEmitAttribute = &somMN_somtEmitAttribute;
#endif  /* somMN_somtEmitAttribute_defined */
#define ReportEmitter_parent_SOMTEmitC_somtEmitAttribute(somSelf,att) \
	((SOM_ParentNumResolve(SOMTEmitC, 1, ReportEmitterCClassData.parentMtab, somtEmitAttribute)) \
	 (somSelf,att))
#ifndef SOMGD_pmc_SOMTEmitC_somtEmitAttribute
  #ifdef parent_SOMTEmitC_somtEmitAttribute
     #undef parent_SOMTEmitC_somtEmitAttribute
     #define SOMGD_pmc_SOMTEmitC_somtEmitAttribute 1
  #else
     #define parent_SOMTEmitC_somtEmitAttribute ReportEmitter_parent_SOMTEmitC_somtEmitAttribute
  #endif /* parent_SOMTEmitC_somtEmitAttribute */
#endif /* SOMGD_pmc_SOMTEmitC_somtEmitAttribute */
#ifndef parent_somtEmitAttribute
   #define parent_somtEmitAttribute(somSelf,att) \
	((SOM_ParentNumResolve(SOMTEmitC, 1, SOM_CurrentClass, somtEmitAttribute)) \
	 (somSelf,att))
#endif  /* parent_somtEmitAttribute */
#define ReportEmitter_parents_somtEmitAttribute(arg0,arg1) \
  (void) ReportEmitter_parent_SOMTEmitC_somtEmitAttribute(arg0,arg1);

/*
 * Overridden method: somInit
 */
#pragma linkage(somInit, system)
SOM_Scope void  SOMLINK somInit(ReportEmitter somSelf);
#ifndef somMN_somInit_defined
#define somMN_somInit_defined
   static char *somMN_somInit = "somInit";
   static somId somId_somInit = &somMN_somInit;
#endif  /* somMN_somInit_defined */
#define ReportEmitter_parent_SOMTEmitC_somInit(somSelf) \
	((SOM_ParentNumResolve(SOMObject, 1, ReportEmitterCClassData.parentMtab, somInit)) \
	 (somSelf))
#ifndef SOMGD_pmc_SOMTEmitC_somInit
  #ifdef parent_SOMTEmitC_somInit
     #undef parent_SOMTEmitC_somInit
     #define SOMGD_pmc_SOMTEmitC_somInit 1
  #else
     #define parent_SOMTEmitC_somInit ReportEmitter_parent_SOMTEmitC_somInit
  #endif /* parent_SOMTEmitC_somInit */
#endif /* SOMGD_pmc_SOMTEmitC_somInit */
#ifndef parent_somInit
   #define parent_somInit(somSelf) \
	((SOM_ParentNumResolve(SOMObject, 1, SOM_CurrentClass, somInit)) \
	 (somSelf))
#endif  /* parent_somInit */
#define ReportEmitter_parents_somInit(arg0) \
  (void) ReportEmitter_parent_SOMTEmitC_somInit(arg0);

/*
 * Initialize the class data structure
 */
struct ReportEmitterClassDataStructure ReportEmitterClassData = {(SOMAny *) NULL};

/*
 * Define the C class data structure
 */
struct ReportEmitterCClassDataStructure ReportEmitterCClassData = {(somMethodTabs) NULL};

/*
 * Routines and Structures to create the class object
 */

/*
 * Declare the Override Methods table.
 */
static somOverrideMethod_t ReportEmitterOM[] = {
    {    &somId_somtGenerateSections,
         (somMethodProc *) somtGenerateSections    },
    {    &somId_somtEmitMethod,
         (somMethodProc *) somtEmitMethod    },
    {    &somId_somtEmitAttribute,
         (somMethodProc *) somtEmitAttribute    },
    {    &somId_somInit,
         (somMethodProc *) somInit    },
};


/*
 *  Initializers for class Ids
 */
static char * somCN_ReportEmitter = "ReportEmitter";
static char * somPCN_ReportEmitter_SOMTEmitC = "SOMTEmitC";

static somId somPCReportEmitter[] = {
    &somPCN_ReportEmitter_SOMTEmitC,
};

static somStaticClassInfo ReportEmitterSCI = {
    3, 0, 4, 0, 0, 0,
    ReportEmitter_MajorVersion, ReportEmitter_MinorVersion,
    sizeof(ReportEmitterData), ReportEmitter_MaxNoMethods, 1,
    &somCN_ReportEmitter,
    (somId) NULL, 1,
    somPCReportEmitter,
    (somClassDataStructure *) &ReportEmitterClassData,
    (somCClassDataStructure *) &ReportEmitterCClassData,
    (somStaticMethod_t *) NULL, ReportEmitterOM,
    (char *) NULL,
    (somNonInternalData_t *) NULL,  (somProcMethods_t *) NULL,
    (somVarargsFuncs_t *) NULL,
    (somTP_somClassInitFunc *) NULL,
    0,
    0,  /* old style class, zero directinitclasses */
    0, /* no directinitclasses */
    0, /* number of methods */
    0, /* methods of the class */
    0, /* dataOffset1 */
    0, /* dataOffset2 */
    0, /* number of SelectInheritedMethods */
    0, /* SelectInheritedMethods */
    0, /* number of releaseorder entries */
    0, /* ReleaseOrder */
    0, /* number of migrated methods */
    0, /* migrated method implementations */
    0, /* number of initializers */
    0, /* initializers */
    0, /* used to identify a DTS class */
    0, /* used to register dynamically computed info */
};


ReportEmitter  SOMLINK ReportEmitterNewClass (integer4 somtmajorVersion,
		integer4 somtminorVersion)
{
    SOMTEmitCNewClass(SOMTEmitC_MajorVersion,SOMTEmitC_MinorVersion);	/* static reference */
    return (somBuildClass(1,&ReportEmitterSCI, somtmajorVersion, somtminorVersion));
}

/*
 * Functions for attributes.
 */

#endif                   /* ReportEmitter_Class_Source */
#pragma checkout(resume)

#endif       /* SOM_ReportEmitter_ih */
